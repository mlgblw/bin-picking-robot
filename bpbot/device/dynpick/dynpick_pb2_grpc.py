# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import dynpick_pb2 as dynpick__pb2


class DynPickStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.get = channel.unary_unary(
                '/DynPick/get',
                request_serializer=dynpick__pb2.Nothing.SerializeToString,
                response_deserializer=dynpick__pb2.Data.FromString,
                )
        self.save = channel.unary_unary(
                '/DynPick/save',
                request_serializer=dynpick__pb2.Nothing.SerializeToString,
                response_deserializer=dynpick__pb2.Nothing.FromString,
                )
        self.save_ok = channel.unary_unary(
                '/DynPick/save_ok',
                request_serializer=dynpick__pb2.Nothing.SerializeToString,
                response_deserializer=dynpick__pb2.Nothing.FromString,
                )


class DynPickServicer(object):
    """Missing associated documentation comment in .proto file."""

    def get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def save(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def save_ok(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DynPickServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'get': grpc.unary_unary_rpc_method_handler(
                    servicer.get,
                    request_deserializer=dynpick__pb2.Nothing.FromString,
                    response_serializer=dynpick__pb2.Data.SerializeToString,
            ),
            'save': grpc.unary_unary_rpc_method_handler(
                    servicer.save,
                    request_deserializer=dynpick__pb2.Nothing.FromString,
                    response_serializer=dynpick__pb2.Nothing.SerializeToString,
            ),
            'save_ok': grpc.unary_unary_rpc_method_handler(
                    servicer.save_ok,
                    request_deserializer=dynpick__pb2.Nothing.FromString,
                    response_serializer=dynpick__pb2.Nothing.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'DynPick', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DynPick(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DynPick/get',
            dynpick__pb2.Nothing.SerializeToString,
            dynpick__pb2.Data.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def save(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DynPick/save',
            dynpick__pb2.Nothing.SerializeToString,
            dynpick__pb2.Nothing.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def save_ok(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DynPick/save_ok',
            dynpick__pb2.Nothing.SerializeToString,
            dynpick__pb2.Nothing.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
